{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","containers/AppHooks.js","index.js"],"names":["Card","name","email","id","address","website","className","alt","src","city","CardList","robots","map","i","othersData","Scroll","props","style","overflowY","height","border","children","SearchBox","onSearch","type","placeholder","onChange","App","useState","setRobots","searchFields","setsearchFields","useEffect","fetch","then","res","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","event","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAeeA,MAZf,YAAsD,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,QAE/B,OAFmD,EAAXC,QAGtC,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BL,EAA1B,cACpB,6BAAKF,IACL,mBAAGK,UAAU,IAAb,SAAkBJ,IAClB,oBAAGI,UAAU,GAAb,mBAAuBF,EAAQK,Y,QCEtBC,MATf,YAA+B,IAAXC,EAAU,EAAVA,OAClB,OACE,qBAAKL,UAAU,KAAf,SACGK,EAAOC,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,EAAMC,EAAiB,iBACpC,OAAO,cAAC,EAAD,eAAkBA,GAAPD,SCSXE,MAdf,SAAgBC,GACd,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,QACRC,OAAQ,mBAJZ,SAOGJ,EAAMK,YCIEC,MAbf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OACE,qBAAKjB,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVkB,KAAK,SACLC,YAAY,eACZC,SAAUH,OCuCHI,MAzCf,WAEE,MAA4BC,mBAAS,IAArC,mBAAOjB,EAAP,KAAekB,EAAf,KACA,EAAwCD,mBAAS,IAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAGAC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAWR,EAAUQ,SAI/B,IAKMC,EAAiB3B,EAAO4B,QAAO,SAACC,GACpC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAASZ,EAAaW,kBAItD,OAAQ9B,EAAOgC,OAGb,sBAAKrC,UAAU,KAAf,UACE,oBAAIA,UAAU,WAAd,yBACA,cAAC,EAAD,CAAWiB,SAfM,SAACqB,GACtBb,EAAgBa,EAAMC,OAAOC,UAezB,cAAC,EAAD,UACGR,EAAeK,OAAS,EACvB,cAAC,EAAD,CAAUhC,OAAQ2B,IAElB,oBAAIhC,UAAU,YAAd,sCATN,oBAAIA,UAAU,WAAd,yB,MCzBNyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2e00668d.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/img-redundant-alt */\r\nimport React from \"react\";\r\n\r\nfunction Card({ name, email, id, address, website }) {\r\n  //console.log(\"*************\" + id);\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img alt=\"photo\" src={`https://robohash.org/${id}?200*200`}></img>\r\n      <h2>{name}</h2>\r\n      <p className=\"i\">{email}</p>\r\n      <p className=\"\">City: {address.city}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nfunction CardList({ robots }) {\r\n  return (\r\n    <div className=\"tc\">\r\n      {robots.map(({ i, ...othersData }) => {\r\n        return <Card key={i} {...othersData} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nfunction Scroll(props) {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        height: \"600px\",\r\n        border: \"1px solid black\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;\r\n","import React from \"react\";\r\n\r\nfunction SearchBox({ onSearch }) {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"search-robot\"\r\n        onChange={onSearch}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","/* eslint-disable no-lone-blocks */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport CardList from \"../components/CardList\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport SearchBox from \"../components/SearchBox\";\r\n\r\nfunction App() {\r\n  // states\r\n  const [robots, setRobots] = useState([]);\r\n  const [searchFields, setsearchFields] = useState(\"\");\r\n\r\n  // componentDidMount\r\n  useEffect(() => {\r\n    fetch(`https://jsonplaceholder.typicode.com/users`)\r\n      .then((res) => res.json())\r\n      .then((users) => setRobots(users));\r\n  });\r\n\r\n  // event\r\n  const onChangeSearch = (event) => {\r\n    setsearchFields(event.target.value);\r\n  };\r\n\r\n  // filter in new Array (robot)\r\n  const filteredRobots = robots.filter((robot) => {\r\n    return robot.name.toLowerCase().includes(searchFields.toLowerCase());\r\n  });\r\n\r\n  {\r\n    return !robots.length ? (\r\n      <h1 className=\"title tc\">Loading...</h1>\r\n    ) : (\r\n      <div className=\"tc\">\r\n        <h1 className=\"title f1\">RoboFriends</h1>\r\n        <SearchBox onSearch={onChangeSearch} />\r\n        <Scroll>\r\n          {filteredRobots.length > 0 ? (\r\n            <CardList robots={filteredRobots} />\r\n          ) : (\r\n            <h1 className=\" title f3\">No Result Found....</h1>\r\n          )}\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/AppHooks\";\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}